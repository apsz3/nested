start: program

program: s_expr*

?s_expr: atom
| list

list: "(" s_expr* ")"

// https://github.com/lark-parser/lark/blob/master/lark/grammars/common.lark

un_op: "+" -> pos
 | "-" -> neg

symbol: "#" ident


?atom:  un_op NUMBER -> un_op
    | NUMBER -> number
    // UN_OP SIGNED_NUMBER -> un_op
    | ESCAPED_STRING -> string
    | symbol
    | ident

ident: /[^\W\d-][\w\d-]*/ | OP
// conflict is with + - in OP here as well
OP: "+" | "-" | "*" | "/" | "%" | "==" | "!=" | "<" | ">" | "<=" | ">=" | "&&" | "||" | "=" | "++" | "--" | "+=" | "-=" | "*=" | "/=" | "%=" | ">>" | "<<" | "&" | "|" | "^"  ">>>" | "<<<" | ">>=" | "<<=" | ">>>=" | "&&=" | "||=" | "&=" | "|=" | "^=" | "~=" | ">>=" | "<<=" | ">>>=" | "<<<=" | "=>" | "->" | "::" | ":" | "?" | "??"


COMMENT: /;.*/

%import common.LETTER
%import common.DIGIT
%import common.SIGNED_NUMBER
%import common.NUMBER

%import common.ESCAPED_STRING
%import common.WS

%import common.NUMBER


%ignore COMMENT
%ignore WS
