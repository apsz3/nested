start: program

program: s_expr*

// Fortunately, Schem does not support things like (+ +++++1 ---1), so we wont.
?s_expr: UN_OP atom -> un_op // We do NOT want unary operators applied to non-atoms!
| OP s_expr s_expr+ -> v_op
| list
| atom

list: "(" s_expr* ")"

// https://github.com/lark-parser/lark/blob/master/lark/grammars/common.lark

// !un_op: ("+" | "-") NUMBER // keep the terminals with !

ident: LETTER (LETTER | DIGIT | "_" | "-")*
symbol: "#" ident

?atom: NUMBER -> number
    | ESCAPED_STRING -> string
    | ident
    | symbol

UN_OP : "+" | "-"
OP : "+" | "-"

COMMENT: /;.*/

%import common.LETTER
%import common.DIGIT
%import common.SIGNED_NUMBER
%import common.NUMBER

%import common.ESCAPED_STRING
%import common.WS

%import common.NUMBER


%ignore COMMENT
%ignore WS
