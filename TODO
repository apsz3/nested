# Bugs

- Symbols defined in global scope bind to function parameter names, e.g.
```
(let x 1)
(let foo (lambda (x) ...))
(foo) ; compiles and runs
```
- Need way to terminate / jump out of nested ifs ... else values not pushed on stack?
# Frontend
- Parse lambdas with empty lists for either params or body
- Auto-generate handlers for bytecode for Python backend (case stmts, function stubs, etc.)

# Ideation
- Compile error message metadata, e.g. what would be most helpful based on the situation of opcodes and likely errors? For example, shadowing a global ID with a function parameter, and trying to call it.